Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                              i2c.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

eflag               0x1               emergency.o
__uartbuf           0x12              uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
LOAD main.o
LOAD remote_control_rx.o
LOAD mu2.o
LOAD uart.o
LOAD ringbuffer.o
LOAD i2c.o
LOAD led.o
LOAD wait.o
LOAD actuater.o
LOAD switch.o
LOAD beep.o
LOAD emergency.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1eac
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_22
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
 .text          0x000000ce      0x816 main.o
                0x000000ce                main
 .text          0x000008e4      0x24c remote_control_rx.o
                0x000008e4                initCtrlData
                0x0000092a                Toggle_RC_Rx_Buffer
                0x00000a9e                __vector_15
                0x00000978                __vector_20
 .text          0x00000b30      0x270 mu2.o
                0x00000b30                Byte2Str
                0x00000c90                mu2_command_eeprom
                0x00000b8c                mu2_command
 .text          0x00000da0      0x516 uart.o
                0x0000124a                __vector_28
                0x00000da0                uart_init
                0x00000f2c                uart0_getchar
                0x00001006                uart0_buf_putchar
                0x00000f98                uart1_putchar
                0x00001080                uart1_buf_putchar
                0x000010fa                __vector_21
                0x000011a2                __vector_29
                0x00000f58                uart0_putchar
                0x00000ec6                uart_setbuffer
 .text          0x000012b6      0x1da ringbuffer.o
                0x00001312                RingPut
                0x000012b6                RingInit
                0x000013b8                RingGet
                0x0000146e                isRingEmpty
 .text          0x00001490      0x46c i2c.o
                0x000015fa                i2cRead
                0x00001490                initI2CMaster
                0x000014fe                i2cWrite
                0x00001748                i2cReadWithCommand
 .text          0x000018fc       0x9e led.o
                0x00001970                LEDInit
                0x000018fc                LED
 .text          0x0000199a      0x114 wait.o
                0x00001a36                wait_us
                0x0000199a                wait_ms
 .text          0x00001aae      0x130 actuater.o
                0x00001b9a                aDrive
                0x00001b34                mAngle
                0x00001aae                mDrive
 .text          0x00001bde       0xa6 switch.o
                0x00001c08                Switch
                0x00001c6c                Channel
                0x00001c50                Group
                0x00001bde                SwitchInit
 .text          0x00001c84       0xd6 beep.o
                0x00001cd4                BeepInit
                0x00001cfe                i2cCheck
                0x00001c84                beep
 .text          0x00001d5a      0x100 emergency.o
                0x00001e36                EmergencyStatus
                0x00001d5a                Emergency
 .text          0x00001e5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .text          0x00001e5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00001e5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x00001e5a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001e5a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001e5a       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                0x00001e5a                __divmodhi4
                0x00001e5a                _div
 .text.libgcc   0x00001e80        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001e80        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001e80       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001e80                __udivmodhi4
                0x00001ea8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001ea8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00001ea8                exit
                0x00001ea8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001ea8        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00001eac                _etext = .

.data           0x00800100      0x218 load address 0x00001eac
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100      0x1ff main.o
 .data          0x008002ff        0x8 remote_control_rx.o
 .data          0x00800307       0x10 mu2.o
 .data          0x00800317        0x0 uart.o
 .data          0x00800317        0x0 ringbuffer.o
 .data          0x00800317        0x0 i2c.o
 .data          0x00800317        0x0 led.o
 .data          0x00800317        0x0 wait.o
 .data          0x00800317        0x0 actuater.o
 .data          0x00800317        0x0 switch.o
 .data          0x00800317        0x1 beep.o
 .data          0x00800318        0x0 emergency.o
 .data          0x00800318        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .data          0x00800318        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800318        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800318        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800318                . = ALIGN (0x2)
                0x00800318                _edata = .
                0x00800318                PROVIDE (__data_end, .)

.bss            0x00800318       0x6a
                0x00800318                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800318        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800318       0x24 main.o
 .bss           0x0080033c       0x25 remote_control_rx.o
 .bss           0x00800361        0xb mu2.o
 .bss           0x0080036c        0x1 uart.o
 .bss           0x0080036d        0x0 ringbuffer.o
 .bss           0x0080036d        0x1 i2c.o
 .bss           0x0080036e        0x0 led.o
 .bss           0x0080036e        0x0 wait.o
 .bss           0x0080036e        0x0 actuater.o
 .bss           0x0080036e        0x0 switch.o
 .bss           0x0080036e        0x1 beep.o
 .bss           0x0080036f        0x0 emergency.o
 .bss           0x0080036f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .bss           0x0080036f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x0080036f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x0080036f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080036f       0x12 uart.o
                0x0080036f                __uartbuf
 COMMON         0x00800381        0x1 emergency.o
                0x00800381                eflag
                0x00800382                PROVIDE (__bss_end, .)
                0x00001eac                __data_load_start = LOADADDR (.data)
                0x000020c4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800382        0x0
                0x00800382                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800382                PROVIDE (__noinit_end, .)
                0x00800382                _end = .
                0x00800382                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x180
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 remote_control_rx.o
 .debug_aranges
                0x00000040       0x20 mu2.o
 .debug_aranges
                0x00000060       0x20 uart.o
 .debug_aranges
                0x00000080       0x20 ringbuffer.o
 .debug_aranges
                0x000000a0       0x20 i2c.o
 .debug_aranges
                0x000000c0       0x20 led.o
 .debug_aranges
                0x000000e0       0x20 wait.o
 .debug_aranges
                0x00000100       0x20 actuater.o
 .debug_aranges
                0x00000120       0x20 switch.o
 .debug_aranges
                0x00000140       0x20 beep.o
 .debug_aranges
                0x00000160       0x20 emergency.o

.debug_pubnames
                0x00000000      0x362
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b       0x5b remote_control_rx.o
 .debug_pubnames
                0x00000076       0x46 mu2.o
 .debug_pubnames
                0x000000bc       0xd3 uart.o
 .debug_pubnames
                0x0000018f       0x47 ringbuffer.o
 .debug_pubnames
                0x000001d6       0x54 i2c.o
 .debug_pubnames
                0x0000022a       0x26 led.o
 .debug_pubnames
                0x00000250       0x2a wait.o
 .debug_pubnames
                0x0000027a       0x33 actuater.o
 .debug_pubnames
                0x000002ad       0x42 switch.o
 .debug_pubnames
                0x000002ef       0x35 beep.o
 .debug_pubnames
                0x00000324       0x3e emergency.o

.debug_info     0x00000000     0x1624
 *(.debug_info)
 .debug_info    0x00000000      0x47d main.o
 .debug_info    0x0000047d      0x374 remote_control_rx.o
 .debug_info    0x000007f1      0x17c mu2.o
 .debug_info    0x0000096d      0x2db uart.o
 .debug_info    0x00000c48      0x17b ringbuffer.o
 .debug_info    0x00000dc3      0x1e9 i2c.o
 .debug_info    0x00000fac       0xae led.o
 .debug_info    0x0000105a       0xc7 wait.o
 .debug_info    0x00001121      0x1c0 actuater.o
 .debug_info    0x000012e1       0xe2 switch.o
 .debug_info    0x000013c3       0xf4 beep.o
 .debug_info    0x000014b7      0x16d emergency.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x9b1
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x126 main.o
 .debug_abbrev  0x00000126      0x11b remote_control_rx.o
 .debug_abbrev  0x00000241       0xbf mu2.o
 .debug_abbrev  0x00000300      0x13c uart.o
 .debug_abbrev  0x0000043c       0xd0 ringbuffer.o
 .debug_abbrev  0x0000050c       0xe9 i2c.o
 .debug_abbrev  0x000005f5       0x65 led.o
 .debug_abbrev  0x0000065a       0x81 wait.o
 .debug_abbrev  0x000006db       0xd3 actuater.o
 .debug_abbrev  0x000007ae       0x8d switch.o
 .debug_abbrev  0x0000083b       0x90 beep.o
 .debug_abbrev  0x000008cb       0xe6 emergency.o

.debug_line     0x00000000     0x1620
 *(.debug_line)
 .debug_line    0x00000000      0x437 main.o
 .debug_line    0x00000437      0x22b remote_control_rx.o
 .debug_line    0x00000662      0x1da mu2.o
 .debug_line    0x0000083c      0x330 uart.o
 .debug_line    0x00000b6c      0x156 ringbuffer.o
 .debug_line    0x00000cc2      0x2d5 i2c.o
 .debug_line    0x00000f97       0xa1 led.o
 .debug_line    0x00001038      0x121 wait.o
 .debug_line    0x00001159      0x151 actuater.o
 .debug_line    0x000012aa       0xd7 switch.o
 .debug_line    0x00001381      0x12c beep.o
 .debug_line    0x000014ad      0x173 emergency.o

.debug_frame    0x00000000      0x360
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020       0x50 remote_control_rx.o
 .debug_frame   0x00000070       0x40 mu2.o
 .debug_frame   0x000000b0       0xb0 uart.o
 .debug_frame   0x00000160       0x50 ringbuffer.o
 .debug_frame   0x000001b0       0x50 i2c.o
 .debug_frame   0x00000200       0x30 led.o
 .debug_frame   0x00000230       0x30 wait.o
 .debug_frame   0x00000260       0x40 actuater.o
 .debug_frame   0x000002a0       0x50 switch.o
 .debug_frame   0x000002f0       0x40 beep.o
 .debug_frame   0x00000330       0x30 emergency.o

.debug_str      0x00000000      0x5e3
 *(.debug_str)
 .debug_str     0x00000000      0x1a5 main.o
                                0x1f8 (size before relaxing)
 .debug_str     0x000001a5       0xab remote_control_rx.o
                                0x1cf (size before relaxing)
 .debug_str     0x00000250       0x46 mu2.o
                                0x101 (size before relaxing)
 .debug_str     0x00000296       0xf4 uart.o
                                0x1d0 (size before relaxing)
 .debug_str     0x0000038a       0x91 ringbuffer.o
                                 0xce (size before relaxing)
 .debug_str     0x0000041b       0x51 i2c.o
                                0x13b (size before relaxing)
 .debug_str     0x0000046c       0x27 led.o
                                 0xe2 (size before relaxing)
 .debug_str     0x00000493       0x30 wait.o
                                 0xef (size before relaxing)
 .debug_str     0x000004c3       0x58 actuater.o
                                 0xf9 (size before relaxing)
 .debug_str     0x0000051b       0x3e switch.o
                                0x100 (size before relaxing)
 .debug_str     0x00000559       0x3c beep.o
                                 0xfd (size before relaxing)
 .debug_str     0x00000595       0x4e emergency.o
                                0x12a (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ROBOS2.elf elf32-avr)
LOAD linker stubs
