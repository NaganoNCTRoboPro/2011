Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              i2c.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                              actuater.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
                              uart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              remote_control_rx.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

eflag               0x1               emergency.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
LOAD main.o
LOAD remote_control_rx.o
LOAD mu2.o
LOAD uart.o
LOAD i2c.o
LOAD led.o
LOAD wait.o
LOAD actuater.o
LOAD switch.o
LOAD beep.o
LOAD emergency.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x166c
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
 .text          0x000000ce      0x144 main.o
                0x000000ce                initSlaveSupply
                0x0000010e                main
                0x000000f2                supplySalve
 .text          0x00000212      0x28a remote_control_rx.o
                0x000003de                initCommunicateIntervalCounter
                0x000003c4                resetCommunicateIntervalCounter
                0x00000212                initCtrlData
                0x00000258                Toggle_RC_Rx_Buffer
                0x0000040a                __vector_15
                0x000002a6                __vector_20
 .text          0x0000049c      0x3c6 mu2.o
                0x000004e4                byteToString
                0x000007a4                mu2TransmitData
                0x0000049c                setMU2PutFunc
                0x00000540                mu2Command
                0x000004c0                setMU2GetFunc
                0x00000666                mu2CommandToEEPROM
 .text          0x00000862      0x4cc uart.o
                0x00000b30                __vector_22
                0x00000cc8                __vector_28
                0x00000a22                uart1Puts
                0x000009a4                uart0Get
                0x000009c2                uart1Get
                0x00000b96                __vector_30
                0x00000976                uart1Put
                0x00000aec                setReceiveCompleteInterruptFunc
                0x000009e0                uart0Puts
                0x00000bfc                __vector_21
                0x00000c62                __vector_29
                0x00000862                initUART
                0x00000aa8                setDataRegisterEmptyFunc
                0x00000a64                setTransmitCompleteInterruptFunc
                0x00000948                uart0Put
 .text          0x00000d2e      0x3ee i2c.o
                0x00000e64                i2cRead
                0x00000d2e                initI2CMaster
                0x00000d70                i2cWrite
                0x00000fa6                i2cReadWithCommand
 .text          0x0000111c       0x9e led.o
                0x00001190                LEDInit
                0x0000111c                LED
 .text          0x000011ba       0x70 wait.o
                0x000011ba                wait_us
                0x000011e6                wait_ms
 .text          0x0000122a      0x130 actuater.o
                0x00001316                aDrive
                0x000012b0                mAngle
                0x0000122a                mDrive
 .text          0x0000135a       0xa6 switch.o
                0x00001384                Switch
                0x000013e8                Channel
                0x000013cc                Group
                0x0000135a                SwitchInit
 .text          0x00001400       0xd6 beep.o
                0x00001450                BeepInit
                0x0000147a                i2cCheck
                0x00001400                beep
 .text          0x000014d6      0x100 emergency.o
                0x000015b2                EmergencyStatus
                0x000014d6                Emergency
 .text          0x000015d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .text          0x000015d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .text          0x000015d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .text          0x000015d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x000015d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000015d6                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000015d6       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x000015d6                __udivmodhi4
 .text.libgcc   0x000015fe       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                0x000015fe                __divmodhi4
                0x000015fe                _div
 .text.libgcc   0x00001624       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
                0x00001624                __udivmodsi4
 .text.libgcc   0x00001668        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001668        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x00001668                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001668        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00001668                exit
                0x00001668                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001668        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x0000166c                _etext = .

.data           0x00800100       0x34 load address 0x0000166c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100       0x1b main.o
 .data          0x0080011b        0x8 remote_control_rx.o
 .data          0x00800123       0x10 mu2.o
 .data          0x00800133        0x0 uart.o
 .data          0x00800133        0x0 i2c.o
 .data          0x00800133        0x0 led.o
 .data          0x00800133        0x0 wait.o
 .data          0x00800133        0x0 actuater.o
 .data          0x00800133        0x0 switch.o
 .data          0x00800133        0x1 beep.o
 .data          0x00800134        0x0 emergency.o
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800134                . = ALIGN (0x2)
                0x00800134                _edata = .
                0x00800134                PROVIDE (__data_end, .)

.bss            0x00800134       0x38
                0x00800134                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800134        0x0 main.o
 .bss           0x00800134       0x25 remote_control_rx.o
 .bss           0x00800159        0x4 mu2.o
 .bss           0x0080015d        0xc uart.o
 .bss           0x00800169        0x0 i2c.o
 .bss           0x00800169        0x0 led.o
 .bss           0x00800169        0x1 wait.o
 .bss           0x0080016a        0x0 actuater.o
 .bss           0x0080016a        0x0 switch.o
 .bss           0x0080016a        0x1 beep.o
 .bss           0x0080016b        0x0 emergency.o
 .bss           0x0080016b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .bss           0x0080016b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .bss           0x0080016b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .bss           0x0080016b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x0080016b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080016b        0x1 emergency.o
                0x0080016b                eflag
                0x0080016c                PROVIDE (__bss_end, .)
                0x0000166c                __data_load_start = LOADADDR (.data)
                0x000016a0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080016c        0x0
                0x0080016c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080016c                PROVIDE (__noinit_end, .)
                0x0080016c                _end = .
                0x0080016c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x160
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 remote_control_rx.o
 .debug_aranges
                0x00000040       0x20 mu2.o
 .debug_aranges
                0x00000060       0x20 uart.o
 .debug_aranges
                0x00000080       0x20 i2c.o
 .debug_aranges
                0x000000a0       0x20 led.o
 .debug_aranges
                0x000000c0       0x20 wait.o
 .debug_aranges
                0x000000e0       0x20 actuater.o
 .debug_aranges
                0x00000100       0x20 switch.o
 .debug_aranges
                0x00000120       0x20 beep.o
 .debug_aranges
                0x00000140       0x20 emergency.o

.debug_pubnames
                0x00000000      0x413
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x3f main.o
 .debug_pubnames
                0x0000003f       0xa2 remote_control_rx.o
 .debug_pubnames
                0x000000e1       0x81 mu2.o
 .debug_pubnames
                0x00000162      0x125 uart.o
 .debug_pubnames
                0x00000287       0x54 i2c.o
 .debug_pubnames
                0x000002db       0x26 led.o
 .debug_pubnames
                0x00000301       0x2a wait.o
 .debug_pubnames
                0x0000032b       0x33 actuater.o
 .debug_pubnames
                0x0000035e       0x42 switch.o
 .debug_pubnames
                0x000003a0       0x35 beep.o
 .debug_pubnames
                0x000003d5       0x3e emergency.o

.debug_info     0x00000000     0x15d4
 *(.debug_info)
 .debug_info    0x00000000      0x2c7 main.o
 .debug_info    0x000002c7      0x3a1 remote_control_rx.o
 .debug_info    0x00000668      0x28b mu2.o
 .debug_info    0x000008f3      0x362 uart.o
 .debug_info    0x00000c55      0x2dc i2c.o
 .debug_info    0x00000f31       0xae led.o
 .debug_info    0x00000fdf       0xc0 wait.o
 .debug_info    0x0000109f      0x1e7 actuater.o
 .debug_info    0x00001286       0xe2 switch.o
 .debug_info    0x00001368       0xf4 beep.o
 .debug_info    0x0000145c      0x178 emergency.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x899
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x112 main.o
 .debug_abbrev  0x00000112      0x122 remote_control_rx.o
 .debug_abbrev  0x00000234       0xe7 mu2.o
 .debug_abbrev  0x0000031b       0xdc uart.o
 .debug_abbrev  0x000003f7      0x104 i2c.o
 .debug_abbrev  0x000004fb       0x65 led.o
 .debug_abbrev  0x00000560       0x81 wait.o
 .debug_abbrev  0x000005e1       0xc4 actuater.o
 .debug_abbrev  0x000006a5       0x8d switch.o
 .debug_abbrev  0x00000732       0x90 beep.o
 .debug_abbrev  0x000007c2       0xd7 emergency.o

.debug_line     0x00000000     0x1322
 *(.debug_line)
 .debug_line    0x00000000      0x1f4 main.o
 .debug_line    0x000001f4      0x26b remote_control_rx.o
 .debug_line    0x0000045f      0x262 mu2.o
 .debug_line    0x000006c1      0x2d5 uart.o
 .debug_line    0x00000996      0x2f7 i2c.o
 .debug_line    0x00000c8d       0xa1 led.o
 .debug_line    0x00000d2e       0xc1 wait.o
 .debug_line    0x00000def      0x187 actuater.o
 .debug_line    0x00000f76       0xd7 switch.o
 .debug_line    0x0000104d      0x12c beep.o
 .debug_line    0x00001179      0x1a9 emergency.o

.debug_frame    0x00000000      0x3d0
 *(.debug_frame)
 .debug_frame   0x00000000       0x40 main.o
 .debug_frame   0x00000040       0x70 remote_control_rx.o
 .debug_frame   0x000000b0       0x70 mu2.o
 .debug_frame   0x00000120      0x100 uart.o
 .debug_frame   0x00000220       0x50 i2c.o
 .debug_frame   0x00000270       0x30 led.o
 .debug_frame   0x000002a0       0x30 wait.o
 .debug_frame   0x000002d0       0x40 actuater.o
 .debug_frame   0x00000310       0x50 switch.o
 .debug_frame   0x00000360       0x40 beep.o
 .debug_frame   0x000003a0       0x30 emergency.o

.debug_str      0x00000000      0x96b
 *(.debug_str)
 .debug_str     0x00000000      0x1d9 main.o
                                0x20d (size before relaxing)
 .debug_str     0x000001d9       0xf8 remote_control_rx.o
                                0x20b (size before relaxing)
 .debug_str     0x000002d1       0xa2 mu2.o
                                0x160 (size before relaxing)
 .debug_str     0x00000373      0x1c6 uart.o
                                0x285 (size before relaxing)
 .debug_str     0x00000539      0x2b2 i2c.o
                                0x394 (size before relaxing)
 .debug_str     0x000007eb       0x2e led.o
                                 0xdf (size before relaxing)
 .debug_str     0x00000819       0x2d wait.o
                                 0xe1 (size before relaxing)
 .debug_str     0x00000846       0x5d actuater.o
                                0x148 (size before relaxing)
 .debug_str     0x000008a3       0x3e switch.o
                                 0xfd (size before relaxing)
 .debug_str     0x000008e1       0x3c beep.o
                                 0xfa (size before relaxing)
 .debug_str     0x0000091d       0x4e emergency.o
                                0x139 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ROBOS2.elf elf32-avr)
LOAD linker stubs
