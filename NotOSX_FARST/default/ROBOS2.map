Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                              i2c.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

eflag               0x1               emergency.o
__uartbuf           0x12              uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
LOAD main.o
LOAD remote_control_rx.o
LOAD mu2.o
LOAD uart.o
LOAD ringbuffer.o
LOAD i2c.o
LOAD led.o
LOAD wait.o
LOAD actuater.o
LOAD switch.o
LOAD beep.o
LOAD emergency.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x17f6
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_22
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
 .text          0x000000ce      0x160 main.o
                0x000000ce                main
 .text          0x0000022e      0x24c remote_control_rx.o
                0x0000022e                initCtrlData
                0x00000274                Toggle_RC_Rx_Buffer
                0x000003e8                __vector_15
                0x000002c2                __vector_20
 .text          0x0000047a      0x270 mu2.o
                0x0000047a                Byte2Str
                0x000005da                mu2_command_eeprom
                0x000004d6                mu2_command
 .text          0x000006ea      0x516 uart.o
                0x00000b94                __vector_28
                0x000006ea                uart_init
                0x00000876                uart0_getchar
                0x00000950                uart0_buf_putchar
                0x000008e2                uart1_putchar
                0x000009ca                uart1_buf_putchar
                0x00000a44                __vector_21
                0x00000aec                __vector_29
                0x000008a2                uart0_putchar
                0x00000810                uart_setbuffer
 .text          0x00000c00      0x1da ringbuffer.o
                0x00000c5c                RingPut
                0x00000c00                RingInit
                0x00000d02                RingGet
                0x00000db8                isRingEmpty
 .text          0x00000dda      0x46c i2c.o
                0x00000f44                i2cRead
                0x00000dda                initI2CMaster
                0x00000e48                i2cWrite
                0x00001092                i2cReadWithCommand
 .text          0x00001246       0x9e led.o
                0x000012ba                LEDInit
                0x00001246                LED
 .text          0x000012e4      0x114 wait.o
                0x00001380                wait_us
                0x000012e4                wait_ms
 .text          0x000013f8      0x130 actuater.o
                0x000014e4                aDrive
                0x0000147e                mAngle
                0x000013f8                mDrive
 .text          0x00001528       0xa6 switch.o
                0x00001552                Switch
                0x000015b6                Channel
                0x0000159a                Group
                0x00001528                SwitchInit
 .text          0x000015ce       0xd6 beep.o
                0x0000161e                BeepInit
                0x00001648                i2cCheck
                0x000015ce                beep
 .text          0x000016a4      0x100 emergency.o
                0x00001780                EmergencyStatus
                0x000016a4                Emergency
 .text          0x000017a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .text          0x000017a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x000017a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x000017a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x000017a4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000017a4       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                0x000017a4                __divmodhi4
                0x000017a4                _div
 .text.libgcc   0x000017ca        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x000017ca        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc   0x000017ca       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x000017ca                __udivmodhi4
                0x000017f2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000017f2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000017f2                exit
                0x000017f2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000017f2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000017f6                _etext = .

.data           0x00800100       0x34 load address 0x000017f6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100       0x1b main.o
 .data          0x0080011b        0x8 remote_control_rx.o
 .data          0x00800123       0x10 mu2.o
 .data          0x00800133        0x0 uart.o
 .data          0x00800133        0x0 ringbuffer.o
 .data          0x00800133        0x0 i2c.o
 .data          0x00800133        0x0 led.o
 .data          0x00800133        0x0 wait.o
 .data          0x00800133        0x0 actuater.o
 .data          0x00800133        0x0 switch.o
 .data          0x00800133        0x1 beep.o
 .data          0x00800134        0x0 emergency.o
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800134                . = ALIGN (0x2)
                0x00800134                _edata = .
                0x00800134                PROVIDE (__data_end, .)

.bss            0x00800134       0x6a
                0x00800134                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800134        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800134       0x24 main.o
 .bss           0x00800158       0x25 remote_control_rx.o
 .bss           0x0080017d        0xb mu2.o
 .bss           0x00800188        0x1 uart.o
 .bss           0x00800189        0x0 ringbuffer.o
 .bss           0x00800189        0x1 i2c.o
 .bss           0x0080018a        0x0 led.o
 .bss           0x0080018a        0x0 wait.o
 .bss           0x0080018a        0x0 actuater.o
 .bss           0x0080018a        0x0 switch.o
 .bss           0x0080018a        0x1 beep.o
 .bss           0x0080018b        0x0 emergency.o
 .bss           0x0080018b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .bss           0x0080018b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x0080018b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x0080018b        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080018b       0x12 uart.o
                0x0080018b                __uartbuf
 COMMON         0x0080019d        0x1 emergency.o
                0x0080019d                eflag
                0x0080019e                PROVIDE (__bss_end, .)
                0x000017f6                __data_load_start = LOADADDR (.data)
                0x0000182a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080019e        0x0
                0x0080019e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080019e                PROVIDE (__noinit_end, .)
                0x0080019e                _end = .
                0x0080019e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x180
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 remote_control_rx.o
 .debug_aranges
                0x00000040       0x20 mu2.o
 .debug_aranges
                0x00000060       0x20 uart.o
 .debug_aranges
                0x00000080       0x20 ringbuffer.o
 .debug_aranges
                0x000000a0       0x20 i2c.o
 .debug_aranges
                0x000000c0       0x20 led.o
 .debug_aranges
                0x000000e0       0x20 wait.o
 .debug_aranges
                0x00000100       0x20 actuater.o
 .debug_aranges
                0x00000120       0x20 switch.o
 .debug_aranges
                0x00000140       0x20 beep.o
 .debug_aranges
                0x00000160       0x20 emergency.o

.debug_pubnames
                0x00000000      0x362
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b       0x5b remote_control_rx.o
 .debug_pubnames
                0x00000076       0x46 mu2.o
 .debug_pubnames
                0x000000bc       0xd3 uart.o
 .debug_pubnames
                0x0000018f       0x47 ringbuffer.o
 .debug_pubnames
                0x000001d6       0x54 i2c.o
 .debug_pubnames
                0x0000022a       0x26 led.o
 .debug_pubnames
                0x00000250       0x2a wait.o
 .debug_pubnames
                0x0000027a       0x33 actuater.o
 .debug_pubnames
                0x000002ad       0x42 switch.o
 .debug_pubnames
                0x000002ef       0x35 beep.o
 .debug_pubnames
                0x00000324       0x3e emergency.o

.debug_info     0x00000000     0x141a
 *(.debug_info)
 .debug_info    0x00000000      0x273 main.o
 .debug_info    0x00000273      0x374 remote_control_rx.o
 .debug_info    0x000005e7      0x17c mu2.o
 .debug_info    0x00000763      0x2db uart.o
 .debug_info    0x00000a3e      0x17b ringbuffer.o
 .debug_info    0x00000bb9      0x1e9 i2c.o
 .debug_info    0x00000da2       0xae led.o
 .debug_info    0x00000e50       0xc7 wait.o
 .debug_info    0x00000f17      0x1c0 actuater.o
 .debug_info    0x000010d7       0xe2 switch.o
 .debug_info    0x000011b9       0xf4 beep.o
 .debug_info    0x000012ad      0x16d emergency.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x98c
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x101 main.o
 .debug_abbrev  0x00000101      0x11b remote_control_rx.o
 .debug_abbrev  0x0000021c       0xbf mu2.o
 .debug_abbrev  0x000002db      0x13c uart.o
 .debug_abbrev  0x00000417       0xd0 ringbuffer.o
 .debug_abbrev  0x000004e7       0xe9 i2c.o
 .debug_abbrev  0x000005d0       0x65 led.o
 .debug_abbrev  0x00000635       0x81 wait.o
 .debug_abbrev  0x000006b6       0xd3 actuater.o
 .debug_abbrev  0x00000789       0x8d switch.o
 .debug_abbrev  0x00000816       0x90 beep.o
 .debug_abbrev  0x000008a6       0xe6 emergency.o

.debug_line     0x00000000     0x1399
 *(.debug_line)
 .debug_line    0x00000000      0x1d2 main.o
 .debug_line    0x000001d2      0x22b remote_control_rx.o
 .debug_line    0x000003fd      0x1da mu2.o
 .debug_line    0x000005d7      0x330 uart.o
 .debug_line    0x00000907      0x156 ringbuffer.o
 .debug_line    0x00000a5d      0x2d5 i2c.o
 .debug_line    0x00000d32       0xa1 led.o
 .debug_line    0x00000dd3      0x121 wait.o
 .debug_line    0x00000ef4      0x140 actuater.o
 .debug_line    0x00001034       0xd7 switch.o
 .debug_line    0x0000110b      0x12c beep.o
 .debug_line    0x00001237      0x162 emergency.o

.debug_frame    0x00000000      0x360
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020       0x50 remote_control_rx.o
 .debug_frame   0x00000070       0x40 mu2.o
 .debug_frame   0x000000b0       0xb0 uart.o
 .debug_frame   0x00000160       0x50 ringbuffer.o
 .debug_frame   0x000001b0       0x50 i2c.o
 .debug_frame   0x00000200       0x30 led.o
 .debug_frame   0x00000230       0x30 wait.o
 .debug_frame   0x00000260       0x40 actuater.o
 .debug_frame   0x000002a0       0x50 switch.o
 .debug_frame   0x000002f0       0x40 beep.o
 .debug_frame   0x00000330       0x30 emergency.o

.debug_str      0x00000000      0x58b
 *(.debug_str)
 .debug_str     0x00000000       0xf0 main.o
                                0x124 (size before relaxing)
 .debug_str     0x000000f0       0xdb remote_control_rx.o
                                0x1be (size before relaxing)
 .debug_str     0x000001cb       0x46 mu2.o
                                 0xf0 (size before relaxing)
 .debug_str     0x00000211       0xf9 uart.o
                                0x1bf (size before relaxing)
 .debug_str     0x0000030a       0x91 ringbuffer.o
                                 0xce (size before relaxing)
 .debug_str     0x0000039b       0x74 i2c.o
                                0x12a (size before relaxing)
 .debug_str     0x0000040f       0x27 led.o
                                 0xd1 (size before relaxing)
 .debug_str     0x00000436       0x30 wait.o
                                 0xef (size before relaxing)
 .debug_str     0x00000466       0x5d actuater.o
                                 0xe8 (size before relaxing)
 .debug_str     0x000004c3       0x3e switch.o
                                 0xef (size before relaxing)
 .debug_str     0x00000501       0x3c beep.o
                                 0xec (size before relaxing)
 .debug_str     0x0000053d       0x4e emergency.o
                                0x119 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ROBOS2.elf elf32-avr)
LOAD linker stubs
