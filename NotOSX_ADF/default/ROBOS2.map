Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                              i2c.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

eflag               0x1               emergency.o
__uartbuf           0x12              uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
LOAD main.o
LOAD remote_control_rx.o
LOAD mu2.o
LOAD uart.o
LOAD ringbuffer.o
LOAD i2c.o
LOAD led.o
LOAD wait.o
LOAD actuater.o
LOAD switch.o
LOAD beep.o
LOAD emergency.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

<<<<<<< HEAD
.text           0x00000000     0x1c7e
=======
.text           0x00000000     0x1c52
>>>>>>> 317eb8aadb7b758495f27da2e2f8e6f397e1e755
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_22
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
<<<<<<< HEAD
 .text          0x000000ce      0x69a main.o
                0x000000ce                main
 .text          0x00000768      0x24c remote_control_rx.o
                0x00000768                initCtrlData
                0x000007ae                Toggle_RC_Rx_Buffer
                0x00000922                __vector_15
                0x000007fc                __vector_20
 .text          0x000009b4      0x270 mu2.o
                0x000009b4                Byte2Str
                0x00000b14                mu2_command_eeprom
                0x00000a10                mu2_command
 .text          0x00000c24      0x516 uart.o
                0x000010ce                __vector_28
                0x00000c24                uart_init
                0x00000db0                uart0_getchar
                0x00000e8a                uart0_buf_putchar
                0x00000e1c                uart1_putchar
                0x00000f04                uart1_buf_putchar
                0x00000f7e                __vector_21
                0x00001026                __vector_29
                0x00000ddc                uart0_putchar
                0x00000d4a                uart_setbuffer
 .text          0x0000113a      0x1da ringbuffer.o
                0x00001196                RingPut
                0x0000113a                RingInit
                0x0000123c                RingGet
                0x000012f2                isRingEmpty
 .text          0x00001314      0x47a i2c.o
                0x00001486                i2cRead
                0x00001314                initI2CMaster
                0x00001382                i2cWrite
                0x000015da                i2cReadWithCommand
 .text          0x0000178e       0x9e led.o
                0x00001802                LEDInit
                0x0000178e                LED
 .text          0x0000182c       0x70 wait.o
                0x0000182c                wait_us
                0x00001858                wait_ms
 .text          0x0000189c      0x130 actuater.o
                0x00001988                aDrive
                0x00001922                mAngle
                0x0000189c                mDrive
 .text          0x000019cc       0xa6 switch.o
                0x000019f6                Switch
                0x00001a5a                Channel
                0x00001a3e                Group
                0x000019cc                SwitchInit
 .text          0x00001a72       0xba beep.o
                0x00001ac2                BeepInit
                0x00001aec                i2cCheck
                0x00001a72                beep
 .text          0x00001b2c      0x100 emergency.o
                0x00001c08                EmergencyStatus
                0x00001b2c                Emergency
 .text          0x00001c2c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .text          0x00001c2c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00001c2c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x00001c2c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001c2c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001c2c       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                0x00001c2c                __divmodhi4
                0x00001c2c                _div
 .text.libgcc   0x00001c52        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001c52        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001c52       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001c52                __udivmodhi4
                0x00001c7a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001c7a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00001c7a                exit
                0x00001c7a                _exit
=======
 .text          0x000000ce      0x66e main.o
                0x000000ce                main
 .text          0x0000073c      0x24c remote_control_rx.o
                0x0000073c                initCtrlData
                0x00000782                Toggle_RC_Rx_Buffer
                0x000008f6                __vector_15
                0x000007d0                __vector_20
 .text          0x00000988      0x270 mu2.o
                0x00000988                Byte2Str
                0x00000ae8                mu2_command_eeprom
                0x000009e4                mu2_command
 .text          0x00000bf8      0x516 uart.o
                0x000010a2                __vector_28
                0x00000bf8                uart_init
                0x00000d84                uart0_getchar
                0x00000e5e                uart0_buf_putchar
                0x00000df0                uart1_putchar
                0x00000ed8                uart1_buf_putchar
                0x00000f52                __vector_21
                0x00000ffa                __vector_29
                0x00000db0                uart0_putchar
                0x00000d1e                uart_setbuffer
 .text          0x0000110e      0x1da ringbuffer.o
                0x0000116a                RingPut
                0x0000110e                RingInit
                0x00001210                RingGet
                0x000012c6                isRingEmpty
 .text          0x000012e8      0x47a i2c.o
                0x0000145a                i2cRead
                0x000012e8                initI2CMaster
                0x00001356                i2cWrite
                0x000015ae                i2cReadWithCommand
 .text          0x00001762       0x9e led.o
                0x000017d6                LEDInit
                0x00001762                LED
 .text          0x00001800       0x70 wait.o
                0x00001800                wait_us
                0x0000182c                wait_ms
 .text          0x00001870      0x130 actuater.o
                0x0000195c                aDrive
                0x000018f6                mAngle
                0x00001870                mDrive
 .text          0x000019a0       0xa6 switch.o
                0x000019ca                Switch
                0x00001a2e                Channel
                0x00001a12                Group
                0x000019a0                SwitchInit
 .text          0x00001a46       0xba beep.o
                0x00001a96                BeepInit
                0x00001ac0                i2cCheck
                0x00001a46                beep
 .text          0x00001b00      0x100 emergency.o
                0x00001bdc                EmergencyStatus
                0x00001b00                Emergency
 .text          0x00001c00        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .text          0x00001c00        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00001c00        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x00001c00        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001c00                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001c00       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                0x00001c00                __divmodhi4
                0x00001c00                _div
 .text.libgcc   0x00001c26        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001c26        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001c26       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001c26                __udivmodhi4
                0x00001c4e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001c4e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00001c4e                exit
                0x00001c4e                _exit
>>>>>>> 317eb8aadb7b758495f27da2e2f8e6f397e1e755
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
<<<<<<< HEAD
 .fini0         0x00001c7a        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00001c7e                _etext = .

.data           0x00800100       0x38 load address 0x00001c7e
=======
 .fini0         0x00001c4e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00001c52                _etext = .

.data           0x00800100       0x38 load address 0x00001c52
>>>>>>> 317eb8aadb7b758495f27da2e2f8e6f397e1e755
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100       0x1e main.o
 .data          0x0080011e        0x8 remote_control_rx.o
 .data          0x00800126       0x10 mu2.o
 .data          0x00800136        0x0 uart.o
 .data          0x00800136        0x0 ringbuffer.o
 .data          0x00800136        0x0 i2c.o
 .data          0x00800136        0x0 led.o
 .data          0x00800136        0x0 wait.o
 .data          0x00800136        0x0 actuater.o
 .data          0x00800136        0x0 switch.o
 .data          0x00800136        0x1 beep.o
 .data          0x00800137        0x0 emergency.o
 .data          0x00800137        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .data          0x00800137        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800137        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800137        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800138                . = ALIGN (0x2)
 *fill*         0x00800137        0x1 00
                0x00800138                _edata = .
                0x00800138                PROVIDE (__data_end, .)

.bss            0x00800138       0x6a
                0x00800138                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800138        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800138       0x24 main.o
 .bss           0x0080015c       0x25 remote_control_rx.o
 .bss           0x00800181        0xb mu2.o
 .bss           0x0080018c        0x1 uart.o
 .bss           0x0080018d        0x0 ringbuffer.o
 .bss           0x0080018d        0x1 i2c.o
 .bss           0x0080018e        0x0 led.o
 .bss           0x0080018e        0x1 wait.o
 .bss           0x0080018f        0x0 actuater.o
 .bss           0x0080018f        0x0 switch.o
 .bss           0x0080018f        0x0 beep.o
 .bss           0x0080018f        0x0 emergency.o
 .bss           0x0080018f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .bss           0x0080018f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x0080018f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x0080018f        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080018f       0x12 uart.o
                0x0080018f                __uartbuf
 COMMON         0x008001a1        0x1 emergency.o
                0x008001a1                eflag
                0x008001a2                PROVIDE (__bss_end, .)
<<<<<<< HEAD
                0x00001c7e                __data_load_start = LOADADDR (.data)
                0x00001cb6                __data_load_end = (__data_load_start + SIZEOF (.data))
=======
                0x00001c52                __data_load_start = LOADADDR (.data)
                0x00001c8a                __data_load_end = (__data_load_start + SIZEOF (.data))
>>>>>>> 317eb8aadb7b758495f27da2e2f8e6f397e1e755

.noinit         0x008001a2        0x0
                0x008001a2                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001a2                PROVIDE (__noinit_end, .)
                0x008001a2                _end = .
                0x008001a2                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x180
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 remote_control_rx.o
 .debug_aranges
                0x00000040       0x20 mu2.o
 .debug_aranges
                0x00000060       0x20 uart.o
 .debug_aranges
                0x00000080       0x20 ringbuffer.o
 .debug_aranges
                0x000000a0       0x20 i2c.o
 .debug_aranges
                0x000000c0       0x20 led.o
 .debug_aranges
                0x000000e0       0x20 wait.o
 .debug_aranges
                0x00000100       0x20 actuater.o
 .debug_aranges
                0x00000120       0x20 switch.o
 .debug_aranges
                0x00000140       0x20 beep.o
 .debug_aranges
                0x00000160       0x20 emergency.o

.debug_pubnames
                0x00000000      0x362
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b       0x5b remote_control_rx.o
 .debug_pubnames
                0x00000076       0x46 mu2.o
 .debug_pubnames
                0x000000bc       0xd3 uart.o
 .debug_pubnames
                0x0000018f       0x47 ringbuffer.o
 .debug_pubnames
                0x000001d6       0x54 i2c.o
 .debug_pubnames
                0x0000022a       0x26 led.o
 .debug_pubnames
                0x00000250       0x2a wait.o
 .debug_pubnames
                0x0000027a       0x33 actuater.o
 .debug_pubnames
                0x000002ad       0x42 switch.o
 .debug_pubnames
                0x000002ef       0x35 beep.o
 .debug_pubnames
                0x00000324       0x3e emergency.o

<<<<<<< HEAD
.debug_info     0x00000000     0x1596
 *(.debug_info)
 .debug_info    0x00000000      0x412 main.o
 .debug_info    0x00000412      0x374 remote_control_rx.o
 .debug_info    0x00000786      0x17c mu2.o
 .debug_info    0x00000902      0x2db uart.o
 .debug_info    0x00000bdd      0x17b ringbuffer.o
 .debug_info    0x00000d58      0x1e9 i2c.o
 .debug_info    0x00000f41       0xae led.o
 .debug_info    0x00000fef       0xc0 wait.o
 .debug_info    0x000010af      0x1c0 actuater.o
 .debug_info    0x0000126f       0xe2 switch.o
 .debug_info    0x00001351       0xd8 beep.o
 .debug_info    0x00001429      0x16d emergency.o
=======
.debug_info     0x00000000     0x156c
 *(.debug_info)
 .debug_info    0x00000000      0x3e8 main.o
 .debug_info    0x000003e8      0x374 remote_control_rx.o
 .debug_info    0x0000075c      0x17c mu2.o
 .debug_info    0x000008d8      0x2db uart.o
 .debug_info    0x00000bb3      0x17b ringbuffer.o
 .debug_info    0x00000d2e      0x1e9 i2c.o
 .debug_info    0x00000f17       0xae led.o
 .debug_info    0x00000fc5       0xc0 wait.o
 .debug_info    0x00001085      0x1c0 actuater.o
 .debug_info    0x00001245       0xe2 switch.o
 .debug_info    0x00001327       0xd8 beep.o
 .debug_info    0x000013ff      0x16d emergency.o
>>>>>>> 317eb8aadb7b758495f27da2e2f8e6f397e1e755
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x99d
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x11f main.o
 .debug_abbrev  0x0000011f      0x11b remote_control_rx.o
 .debug_abbrev  0x0000023a       0xbf mu2.o
 .debug_abbrev  0x000002f9      0x13c uart.o
 .debug_abbrev  0x00000435       0xd0 ringbuffer.o
 .debug_abbrev  0x00000505       0xe9 i2c.o
 .debug_abbrev  0x000005ee       0x65 led.o
 .debug_abbrev  0x00000653       0x81 wait.o
 .debug_abbrev  0x000006d4       0xd3 actuater.o
 .debug_abbrev  0x000007a7       0x8d switch.o
 .debug_abbrev  0x00000834       0x83 beep.o
 .debug_abbrev  0x000008b7       0xe6 emergency.o

<<<<<<< HEAD
.debug_line     0x00000000     0x15a9
 *(.debug_line)
 .debug_line    0x00000000      0x46f main.o
 .debug_line    0x0000046f      0x22b remote_control_rx.o
 .debug_line    0x0000069a      0x1da mu2.o
 .debug_line    0x00000874      0x330 uart.o
 .debug_line    0x00000ba4      0x156 ringbuffer.o
 .debug_line    0x00000cfa      0x305 i2c.o
 .debug_line    0x00000fff       0xa1 led.o
 .debug_line    0x000010a0       0xc1 wait.o
 .debug_line    0x00001161      0x13e actuater.o
 .debug_line    0x0000129f       0xd7 switch.o
 .debug_line    0x00001376       0xd3 beep.o
 .debug_line    0x00001449      0x160 emergency.o
=======
.debug_line     0x00000000     0x15ab
 *(.debug_line)
 .debug_line    0x00000000      0x455 main.o
 .debug_line    0x00000455      0x22b remote_control_rx.o
 .debug_line    0x00000680      0x1da mu2.o
 .debug_line    0x0000085a      0x330 uart.o
 .debug_line    0x00000b8a      0x156 ringbuffer.o
 .debug_line    0x00000ce0      0x305 i2c.o
 .debug_line    0x00000fe5       0xa1 led.o
 .debug_line    0x00001086       0xc1 wait.o
 .debug_line    0x00001147      0x14c actuater.o
 .debug_line    0x00001293       0xd7 switch.o
 .debug_line    0x0000136a       0xd3 beep.o
 .debug_line    0x0000143d      0x16e emergency.o
>>>>>>> 317eb8aadb7b758495f27da2e2f8e6f397e1e755

.debug_frame    0x00000000      0x360
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020       0x50 remote_control_rx.o
 .debug_frame   0x00000070       0x40 mu2.o
 .debug_frame   0x000000b0       0xb0 uart.o
 .debug_frame   0x00000160       0x50 ringbuffer.o
 .debug_frame   0x000001b0       0x50 i2c.o
 .debug_frame   0x00000200       0x30 led.o
 .debug_frame   0x00000230       0x30 wait.o
 .debug_frame   0x00000260       0x40 actuater.o
 .debug_frame   0x000002a0       0x50 switch.o
 .debug_frame   0x000002f0       0x40 beep.o
 .debug_frame   0x00000330       0x30 emergency.o

<<<<<<< HEAD
.debug_str      0x00000000      0x5c3
 *(.debug_str)
 .debug_str     0x00000000      0x19c main.o
                                0x1df (size before relaxing)
 .debug_str     0x0000019c       0xd3 remote_control_rx.o
                                0x1bc (size before relaxing)
 .debug_str     0x0000026f       0x46 mu2.o
                                 0xee (size before relaxing)
 .debug_str     0x000002b5       0xf4 uart.o
                                0x1bd (size before relaxing)
 .debug_str     0x000003a9       0x4d ringbuffer.o
                                 0xb2 (size before relaxing)
 .debug_str     0x000003f6       0x51 i2c.o
                                0x128 (size before relaxing)
 .debug_str     0x00000447       0x27 led.o
                                 0xcf (size before relaxing)
 .debug_str     0x0000046e       0x36 wait.o
                                 0xd1 (size before relaxing)
 .debug_str     0x000004a4       0x5d actuater.o
                                 0xe6 (size before relaxing)
 .debug_str     0x00000501       0x3e switch.o
                                 0xed (size before relaxing)
 .debug_str     0x0000053f       0x36 beep.o
                                 0xdc (size before relaxing)
 .debug_str     0x00000575       0x4e emergency.o
                                0x117 (size before relaxing)
=======
.debug_str      0x00000000      0x57d
 *(.debug_str)
 .debug_str     0x00000000      0x17e main.o
                                0x1c1 (size before relaxing)
 .debug_str     0x0000017e       0xab remote_control_rx.o
                                0x1ca (size before relaxing)
 .debug_str     0x00000229       0x46 mu2.o
                                 0xfc (size before relaxing)
 .debug_str     0x0000026f       0xf4 uart.o
                                0x1cb (size before relaxing)
 .debug_str     0x00000363       0x4d ringbuffer.o
                                 0xc0 (size before relaxing)
 .debug_str     0x000003b0       0x51 i2c.o
                                0x136 (size before relaxing)
 .debug_str     0x00000401       0x27 led.o
                                 0xdd (size before relaxing)
 .debug_str     0x00000428       0x36 wait.o
                                 0xdf (size before relaxing)
 .debug_str     0x0000045e       0x5d actuater.o
                                 0xf4 (size before relaxing)
 .debug_str     0x000004bb       0x3e switch.o
                                 0xfb (size before relaxing)
 .debug_str     0x000004f9       0x36 beep.o
                                 0xea (size before relaxing)
 .debug_str     0x0000052f       0x4e emergency.o
                                0x125 (size before relaxing)
>>>>>>> 317eb8aadb7b758495f27da2e2f8e6f397e1e755

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ROBOS2.elf elf32-avr)
LOAD linker stubs
