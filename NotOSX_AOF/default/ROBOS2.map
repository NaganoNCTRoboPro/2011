Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                              i2c.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

eflag               0x1               emergency.o
__uartbuf           0x12              uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
LOAD main.o
LOAD remote_control_rx.o
LOAD mu2.o
LOAD uart.o
LOAD ringbuffer.o
LOAD i2c.o
LOAD led.o
LOAD wait.o
LOAD actuater.o
LOAD switch.o
LOAD beep.o
LOAD emergency.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1c0c
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_22
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
 .text          0x000000ce      0x592 main.o
                0x000000ce                main
 .text          0x00000660      0x24c remote_control_rx.o
                0x00000660                initCtrlData
                0x000006a6                Toggle_RC_Rx_Buffer
                0x0000081a                __vector_15
                0x000006f4                __vector_20
 .text          0x000008ac      0x270 mu2.o
                0x000008ac                Byte2Str
                0x00000a0c                mu2_command_eeprom
                0x00000908                mu2_command
 .text          0x00000b1c      0x516 uart.o
                0x00000fc6                __vector_28
                0x00000b1c                uart_init
                0x00000ca8                uart0_getchar
                0x00000d82                uart0_buf_putchar
                0x00000d14                uart1_putchar
                0x00000dfc                uart1_buf_putchar
                0x00000e76                __vector_21
                0x00000f1e                __vector_29
                0x00000cd4                uart0_putchar
                0x00000c42                uart_setbuffer
 .text          0x00001032      0x1da ringbuffer.o
                0x0000108e                RingPut
                0x00001032                RingInit
                0x00001134                RingGet
                0x000011ea                isRingEmpty
 .text          0x0000120c      0x46c i2c.o
                0x00001376                i2cRead
                0x0000120c                initI2CMaster
                0x0000127a                i2cWrite
                0x000014c4                i2cReadWithCommand
 .text          0x00001678       0x9e led.o
                0x000016ec                LEDInit
                0x00001678                LED
 .text          0x00001716      0x114 wait.o
                0x000017b2                wait_us
                0x00001716                wait_ms
 .text          0x0000182a      0x130 actuater.o
                0x00001916                aDrive
                0x000018b0                mAngle
                0x0000182a                mDrive
 .text          0x0000195a       0xa6 switch.o
                0x00001984                Switch
                0x000019e8                Channel
                0x000019cc                Group
                0x0000195a                SwitchInit
 .text          0x00001a00       0xba beep.o
                0x00001a50                BeepInit
                0x00001a7a                i2cCheck
                0x00001a00                beep
 .text          0x00001aba      0x100 emergency.o
                0x00001b96                EmergencyStatus
                0x00001aba                Emergency
 .text          0x00001bba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .text          0x00001bba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00001bba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x00001bba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001bba                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001bba       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
                0x00001bba                __divmodhi4
                0x00001bba                _div
 .text.libgcc   0x00001be0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001be0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001be0       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001be0                __udivmodhi4
                0x00001c08                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001c08        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00001c08                exit
                0x00001c08                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001c08        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00001c0c                _etext = .

.data           0x00800100       0x56 load address 0x00001c0c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100       0x3d main.o
 .data          0x0080013d        0x8 remote_control_rx.o
 .data          0x00800145       0x10 mu2.o
 .data          0x00800155        0x0 uart.o
 .data          0x00800155        0x0 ringbuffer.o
 .data          0x00800155        0x0 i2c.o
 .data          0x00800155        0x0 led.o
 .data          0x00800155        0x0 wait.o
 .data          0x00800155        0x0 actuater.o
 .data          0x00800155        0x0 switch.o
 .data          0x00800155        0x1 beep.o
 .data          0x00800156        0x0 emergency.o
 .data          0x00800156        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .data          0x00800156        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800156        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800156        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800156                . = ALIGN (0x2)
                0x00800156                _edata = .
                0x00800156                PROVIDE (__data_end, .)

.bss            0x00800156       0x69
                0x00800156                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800156        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800156       0x24 main.o
 .bss           0x0080017a       0x25 remote_control_rx.o
 .bss           0x0080019f        0xb mu2.o
 .bss           0x008001aa        0x1 uart.o
 .bss           0x008001ab        0x0 ringbuffer.o
 .bss           0x008001ab        0x1 i2c.o
 .bss           0x008001ac        0x0 led.o
 .bss           0x008001ac        0x0 wait.o
 .bss           0x008001ac        0x0 actuater.o
 .bss           0x008001ac        0x0 switch.o
 .bss           0x008001ac        0x0 beep.o
 .bss           0x008001ac        0x0 emergency.o
 .bss           0x008001ac        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_divmodhi4.o)
 .bss           0x008001ac        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x008001ac        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x008001ac        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001ac       0x12 uart.o
                0x008001ac                __uartbuf
 COMMON         0x008001be        0x1 emergency.o
                0x008001be                eflag
                0x008001bf                PROVIDE (__bss_end, .)
                0x00001c0c                __data_load_start = LOADADDR (.data)
                0x00001c62                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001bf        0x0
                0x008001bf                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001bf                PROVIDE (__noinit_end, .)
                0x008001bf                _end = .
                0x008001bf                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x180
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 remote_control_rx.o
 .debug_aranges
                0x00000040       0x20 mu2.o
 .debug_aranges
                0x00000060       0x20 uart.o
 .debug_aranges
                0x00000080       0x20 ringbuffer.o
 .debug_aranges
                0x000000a0       0x20 i2c.o
 .debug_aranges
                0x000000c0       0x20 led.o
 .debug_aranges
                0x000000e0       0x20 wait.o
 .debug_aranges
                0x00000100       0x20 actuater.o
 .debug_aranges
                0x00000120       0x20 switch.o
 .debug_aranges
                0x00000140       0x20 beep.o
 .debug_aranges
                0x00000160       0x20 emergency.o

.debug_pubnames
                0x00000000      0x362
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b main.o
 .debug_pubnames
                0x0000001b       0x5b remote_control_rx.o
 .debug_pubnames
                0x00000076       0x46 mu2.o
 .debug_pubnames
                0x000000bc       0xd3 uart.o
 .debug_pubnames
                0x0000018f       0x47 ringbuffer.o
 .debug_pubnames
                0x000001d6       0x54 i2c.o
 .debug_pubnames
                0x0000022a       0x26 led.o
 .debug_pubnames
                0x00000250       0x2a wait.o
 .debug_pubnames
                0x0000027a       0x33 actuater.o
 .debug_pubnames
                0x000002ad       0x42 switch.o
 .debug_pubnames
                0x000002ef       0x35 beep.o
 .debug_pubnames
                0x00000324       0x3e emergency.o

.debug_info     0x00000000     0x15c1
 *(.debug_info)
 .debug_info    0x00000000      0x436 main.o
 .debug_info    0x00000436      0x374 remote_control_rx.o
 .debug_info    0x000007aa      0x17c mu2.o
 .debug_info    0x00000926      0x2db uart.o
 .debug_info    0x00000c01      0x17b ringbuffer.o
 .debug_info    0x00000d7c      0x1e9 i2c.o
 .debug_info    0x00000f65       0xae led.o
 .debug_info    0x00001013       0xc7 wait.o
 .debug_info    0x000010da      0x1c0 actuater.o
 .debug_info    0x0000129a       0xe2 switch.o
 .debug_info    0x0000137c       0xd8 beep.o
 .debug_info    0x00001454      0x16d emergency.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x99d
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x11f main.o
 .debug_abbrev  0x0000011f      0x11b remote_control_rx.o
 .debug_abbrev  0x0000023a       0xbf mu2.o
 .debug_abbrev  0x000002f9      0x13c uart.o
 .debug_abbrev  0x00000435       0xd0 ringbuffer.o
 .debug_abbrev  0x00000505       0xe9 i2c.o
 .debug_abbrev  0x000005ee       0x65 led.o
 .debug_abbrev  0x00000653       0x81 wait.o
 .debug_abbrev  0x000006d4       0xd3 actuater.o
 .debug_abbrev  0x000007a7       0x8d switch.o
 .debug_abbrev  0x00000834       0x83 beep.o
 .debug_abbrev  0x000008b7       0xe6 emergency.o

.debug_line     0x00000000     0x1557
 *(.debug_line)
 .debug_line    0x00000000      0x3c7 main.o
 .debug_line    0x000003c7      0x22b remote_control_rx.o
 .debug_line    0x000005f2      0x1da mu2.o
 .debug_line    0x000007cc      0x330 uart.o
 .debug_line    0x00000afc      0x156 ringbuffer.o
 .debug_line    0x00000c52      0x2d5 i2c.o
 .debug_line    0x00000f27       0xa1 led.o
 .debug_line    0x00000fc8      0x121 wait.o
 .debug_line    0x000010e9      0x151 actuater.o
 .debug_line    0x0000123a       0xd7 switch.o
 .debug_line    0x00001311       0xd3 beep.o
 .debug_line    0x000013e4      0x173 emergency.o

.debug_frame    0x00000000      0x360
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 main.o
 .debug_frame   0x00000020       0x50 remote_control_rx.o
 .debug_frame   0x00000070       0x40 mu2.o
 .debug_frame   0x000000b0       0xb0 uart.o
 .debug_frame   0x00000160       0x50 ringbuffer.o
 .debug_frame   0x000001b0       0x50 i2c.o
 .debug_frame   0x00000200       0x30 led.o
 .debug_frame   0x00000230       0x30 wait.o
 .debug_frame   0x00000260       0x40 actuater.o
 .debug_frame   0x000002a0       0x50 switch.o
 .debug_frame   0x000002f0       0x40 beep.o
 .debug_frame   0x00000330       0x30 emergency.o

.debug_str      0x00000000      0x59c
 *(.debug_str)
 .debug_str     0x00000000      0x183 main.o
                                0x1d6 (size before relaxing)
 .debug_str     0x00000183       0xab remote_control_rx.o
                                0x1cf (size before relaxing)
 .debug_str     0x0000022e       0x46 mu2.o
                                0x101 (size before relaxing)
 .debug_str     0x00000274       0xf4 uart.o
                                0x1d0 (size before relaxing)
 .debug_str     0x00000368       0x77 ringbuffer.o
                                 0xb4 (size before relaxing)
 .debug_str     0x000003df       0x51 i2c.o
                                0x13b (size before relaxing)
 .debug_str     0x00000430       0x27 led.o
                                 0xe2 (size before relaxing)
 .debug_str     0x00000457       0x30 wait.o
                                 0xd5 (size before relaxing)
 .debug_str     0x00000487       0x53 actuater.o
                                 0xf9 (size before relaxing)
 .debug_str     0x000004da       0x3e switch.o
                                0x100 (size before relaxing)
 .debug_str     0x00000518       0x36 beep.o
                                 0xef (size before relaxing)
 .debug_str     0x0000054e       0x4e emergency.o
                                0x12a (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ROBOS2.elf elf32-avr)
LOAD linker stubs
